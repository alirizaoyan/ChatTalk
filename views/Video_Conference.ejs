<!-- Demo version: 2017.12.13 -->

<!DOCTYPE html>
<html lang="en" dir="ltr">
<head>
    <meta charset="utf-8">
    <title>Video Conferencing using RTCMultiConnection</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0">
    <link rel="stylesheet" href="/public/stylesheets/stylesheet.css">
    <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <link rel="stylesheet" href="/public/stylesheets/main.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
</head>
<body>
<style>
    .btn{
        display: none;
    }
</style>


<section class="make-center">
    <div class="panel panel-primary">
        <div class="panel-heading">
            Video Konferans
        </div>
        <input hidden="hidden" type="text" id="room-id" value="abcdef" autocorrect=off autocapitalize=off size=20>
        <button class="btn"  id="open-room">Open Room</button>
        <button style="display: none;" id="join-room">Join Room</button>
        <button id="open-or-join-room"></button>
        <div id="videos-container"></div>
    </div>

</section>

<script src="/public/js/RTCMultiConnection.js"></script>
<script src="/public/js/adapter.js"></script>
<script src="/public/js/socket.io.js"></script>

<!-- custom layout for HTML5 audio/video elements -->
<link rel="stylesheet" href="/public/stylesheets/getHTMLMediaElement.css">
<script src="/public/js/getHTMLMediaElement.js"></script>
<script>
    window.enableAdapter = true; // enable adapter.js
    // ......................................................
    // .......................UI Code........................
    // ......................................................
    document.getElementById('open-room').onclick = function() {
        disableInputButtons();
        connection.open(document.getElementById('room-id').value, function() {
            //showRoomURL(connection.sessionid);
        });
    };
    document.getElementById('join-room').onclick = function() {
        disableInputButtons();
        connection.join(document.getElementById('room-id').value);
    };
    document.getElementById('open-or-join-room').onclick = function() {
        disableInputButtons();
        connection.openOrJoin(document.getElementById('room-id').value, function(isRoomExist, roomid) {
            if (!isRoomExist) {
                //showRoomURL(roomid);
            }
        });
    };
    // ......................................................
    // ..................RTCMultiConnection Code.............
    // ......................................................
    var connection = new RTCMultiConnection();
    // by default, socket.io server is assumed to be deployed on your own URL
    connection.socketURL = '/';
    // comment-out below line if you do not have your own socket.io server
    // connection.socketURL = 'https://rtcmulticonnection.herokuapp.com:443/';
    connection.socketMessageEvent = 'video-conference-demo';
    connection.session = {
        audio: true,
        video: true
    };
    connection.sdpConstraints.mandatory = {
        OfferToReceiveAudio: true,
        OfferToReceiveVideo: true
    };
    connection.videosContainer = document.getElementById('videos-container');
    connection.onstream = function(event) {
        var existing = document.getElementById(event.streamid);
        if(existing && existing.parentNode) {
            existing.parentNode.removeChild(existing);
        }
        event.mediaElement.removeAttribute('src');
        event.mediaElement.removeAttribute('srcObject');
        var video = document.createElement('video');
        video.controls = true;
        if(event.type === 'local') {
            video.muted = true;
        }
        video.srcObject = event.stream;
        var width = parseInt(connection.videosContainer.clientWidth / 2) - 20;
        var mediaElement = getHTMLMediaElement(video, {
            title: event.userid,
            buttons:[],
            width: width,
            showOnMouseEnter: false
        });
        connection.videosContainer.appendChild(mediaElement);
        setTimeout(function() {
            mediaElement.media.play();
        }, 5000);
        mediaElement.id = event.streamid;
    };
    connection.onstreamended = function(event) {
        var mediaElement = document.getElementById(event.streamid);
        if (mediaElement) {
            mediaElement.parentNode.removeChild(mediaElement);
        }
    };
    connection.onMediaError = function(e) {
        if (e.message === 'Concurrent mic process limit.') {
            if (DetectRTC.audioInputDevices.length <= 1) {
                return;
            }
            var secondaryMic = DetectRTC.audioInputDevices[1].deviceId;
            connection.mediaConstraints.audio = {
                deviceId: secondaryMic
            };
            connection.join(connection.sessionid);
        }
    };
    function disableInputButtons() {
        document.getElementById('open-or-join-room').disabled = true;
        document.getElementById('open-room').disabled = true;
        document.getElementById('join-room').disabled = true;
        document.getElementById('room-id').disabled = true;
    }

    (function() {
        var params = {},
            r = /([^&=]+)=?([^&]*)/g;
        function d(s) {
            return decodeURIComponent(s.replace(/\+/g, ' '));
        }
        var match, search = window.location.search;
        while (match = r.exec(search.substring(1)))
            params[d(match[1])] = d(match[2]);
        window.params = params;
    })();
    var roomid = '';
    if (localStorage.getItem(connection.socketMessageEvent)) {
        $(document).ready(function () {

            //Eğer herhangi bir oda oluşturulmamışsa ilk olarak bu if'in içine düşer. O yüzden oda açma butonu burada çalıştırılacak.
            //window.location.pathname ile url'de / tan sonraki değer alınır. slice(12) diyerek ilk 12 karakter alınır. Yani conference! yazısından
            //sonraki değerdir bu. ? değil ! koydum. Çünkü soru işareti koyunca kendisinden sonraki değeri görmüyor. & işareti de aynı şekilde.
            //url'e yazdığımız bu değer, ChatPage.ejs'den gelen ve bizim elle girdiğimiz oda değeridir.
            //Ardından otomatik olarak open-room butonuna click yaparız.
            var str = (window.location.pathname).slice(12);
            roomid = str;
            document.getElementById("open-or-join-room").click();
        });
        var str = (window.location.pathname).slice(12);
//        roomid = localStorage.getItem(connection.socketMessageEvent);
          roomid = str;
    }
    else {
            $(document).ready(function () {

                //Eğer herhangi bir oda oluşturulmamışsa ilk olarak bu if'in içine düşer. O yüzden oda açma butonu burada çalıştırılacak.
                //window.location.pathname ile url'de / tan sonraki değer alınır. slice(12) diyerek ilk 12 karakter alınır. Yani conference! yazısından
                //sonraki değerdir bu. ? değil ! koydum. Çünkü soru işareti koyunca kendisinden sonraki değeri görmüyor. & işareti de aynı şekilde.
                //url'e yazdığımız bu değer, ChatPage.ejs'den gelen ve bizim elle girdiğimiz oda değeridir.
                //Ardından otomatik olarak open-room butonuna click yaparız.
                var str = (window.location.pathname).slice(12);
                roomid = str;

                document.getElementById("open-or-join-room").click();
            });
            var str = (window.location.pathname).slice(12);
            //roomid = connection.token();
            roomid = str;

        }
    document.getElementById('room-id').value = roomid;
    document.getElementById('room-id').onkeyup = function() {
        localStorage.setItem(connection.socketMessageEvent, this.value);
    };
    var hashString = location.hash.replace('#', '');
    if (hashString.length && hashString.indexOf('comment-') == 0) {
        hashString = '';
    }
    var roomid = params.roomid;
    if (!roomid && hashString.length) {
        roomid = hashString;
    }
    if (roomid && roomid.length) {
        document.getElementById('room-id').value = roomid;
        localStorage.setItem(connection.socketMessageEvent, roomid);
        // auto-join-room
        (function reCheckRoomPresence() {
            connection.checkPresence(roomid, function(isRoomExist) {
                if (isRoomExist) {
                    connection.join(roomid);

                    return;
                }
                setTimeout(reCheckRoomPresence, 5000);
            });
        })();
        disableInputButtons();
    }
</script>

<script>
    $('#open-or-join-room').click(function() {
        $('#open-or-join-room').show();
    });
</script>
<script src="https://cdn.webrtc-experiment.com/common.js"></script>
<script src="//netdna.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
</body>
</html>