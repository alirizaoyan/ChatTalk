<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">

    <link rel="stylesheet" href="https://cdn.webrtc-experiment.com/style.css">
    <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <link rel="stylesheet" href="/public/stylesheets/main.css">


    <style>
        * {
            word-wrap:break-word;
        }
        video {
            object-fit: fill;
            width: 30%;
        }
        button,
        input,
        select {
            font-weight: normal;
            padding: 2px 4px;
            text-decoration: none;
            display: inline-block;
            text-shadow: none;
            font-size: 16px;
            outline: none;
        }

        .make-center {
            text-align: center;
            padding: 5px 10px;
        }

        img, input, textarea {
            max-width: 100%
        }

        @media all and (max-width: 500px) {
            .fork-left, .fork-right, .github-stargazers {
                display: none;
            }
        }
        #open-or-join-room {
            display: none;
        }
        .make-center{
            display: none;
        }
    </style>
</head>

<body>
    <section class="experiment">
        <div class="panel panel-primary" >
            <div class="panel-heading">
                Bire Bir Görüşme
            </div>
            <div class="make-center">
                <input type="hidden" id="room-id" value="abcdef" autocorrect=off autocapitalize=off size=20>
                <button hidden="hidden" id="open-or-join-room">Auto Open Or Join Room</button>

                <div id="room-urls" style="text-align: center;display: none;background: #F1EDED;margin: 15px -10px;border: 1px solid rgb(189, 189, 189);border-left: 0;border-right: 0;"></div>
            </div>

            <div id="videos-container"></div>
        </div>

    </section>

    <script src="/public/js/RTCMultiConnection.js"></script>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <!-- custom layout for HTML5 audio/video elements -->
    <script src="https://cdn.webrtc-experiment.com/getMediaElement.js"></script>

    <!-- socket.io for signaling -->
    <script src="/public/js/socket.io.js"></script>

    <script>



            document.getElementById('open-or-join-room').onclick = function () {
                disableInputButtons();
                connection.openOrJoin(document.getElementById('room-id').value);
            };

            // ......................................................
            // ..................RTCMultiConnection Code.............
            // ......................................................

            var connection = new RTCMultiConnection();

            // by default, socket.io server is assumed to be deployed on your own URL
            connection.socketURL = '/';

            // connection.socketMessageEvent = 'video-conference-demo';

            connection.session = {
                audio: true,
                video: true
            };

            connection.sdpConstraints.mandatory = {
                OfferToReceiveAudio: true,
                OfferToReceiveVideo: true
            };

            connection.videosContainer = document.getElementById('videos-container');
            connection.onstream = function (event) {
                var width = parseInt(connection.videosContainer.clientWidth / 2) - 20;
                var mediaElement = getMediaElement(event.mediaElement, {
                    title: event.userid,
                    buttons:[],
                    width: width,
                    showOnMouseEnter: false
                });

                connection.videosContainer.appendChild(mediaElement);

                setTimeout(function () {
                    mediaElement.media.play();
                }, 5000);

                mediaElement.id = event.streamid;
            };

            connection.onstreamended = function (event) {
                var mediaElement = document.getElementById(event.streamid);
                if (mediaElement) {
                    mediaElement.parentNode.removeChild(mediaElement);
                }
            };

            function disableInputButtons() {
                document.getElementById('open-or-join-room').disabled = true;
                document.getElementById('room-id').disabled = true;
            }


            (function () {
                var params = {},
                    r = /([^&=]+)=?([^&]*)/g;

                function d(s) {
                    return decodeURIComponent(s.replace(/\+/g, ' '));
                }

                var match, search = window.location.search;
                while (match = r.exec(search.substring(1)))
                    params[d(match[1])] = d(match[2]);
                window.params = params;
            })();

            var roomid = '';



            if (localStorage.getItem(connection.socketMessageEvent)) {
                roomid = localStorage.getItem(connection.socketMessageEvent);

            } else {
                //roomid = connection.token();

                $(document).ready(function () {

                    var str = (window.location.pathname).slice(9);
                    roomid = str;
                    document.getElementById("open-or-join-room").click();
                });
            }
            document.getElementById('room-id').value = roomid;
            document.getElementById('room-id').onkeyup = function () {
                localStorage.setItem(connection.socketMessageEvent, this.value);
            };

            var hashString = location.hash.replace('#', '');
            if (hashString.length && hashString.indexOf('comment-') == 0) {
                hashString = '';
            }

            var roomid = params.roomid;

            if (!roomid && hashString.length) {
                roomid = hashString;
            }
            if (roomid && roomid.length) {
                document.getElementById('room-id').value = roomid;
                localStorage.setItem(connection.socketMessageEvent, roomid);

                // auto-join-room
                (function reCheckRoomPresence() {
                    connection.checkPresence(roomid, function (isRoomExists) {
                        if (isRoomExists) {
                            connection.join(roomid);

                            return;
                        }

                        setTimeout(reCheckRoomPresence, 5000);
                    });
                })();

                disableInputButtons();
            }
            // to make it one-to-one
            connection.maxParticipantsAllowed = 1;
            connection.onRoomFull = function (roomid) {
                connection.closeSocket();
                connection.attachStreams.forEach(function (stream) {
                    stream.stop();
                });

                document.getElementById('open-or-join-room').disabled = false;
                document.getElementById('room-id').disabled = false;

                alert('Room is full.');
            };
    </script>

    <script>
        window.useThisGithubPath = 'muaz-khan/RTCMultiConnection';
    </script>
    <script src="https://cdn.webrtc-experiment.com/commits.js" async></script>


<script>
    $('#open-or-join-room').click(function() {
        $('.make-center').hide();
    });
</script>
<script src="//netdna.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
</body>

</html>
